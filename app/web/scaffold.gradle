// ################################################################################
// GWT Gradle Plugin
// ################################################################################
scaffold << {
	println "*** Scaffolding Project " + project.name + " ***"

	// source packages
	def base = project.group + "." + rootProject.name + "." + project.name
	def client = base + ".client"
	def gin = client + ".gin"
	def place = client + ".place"
	def app = client + ".application"
	def ui = app + ".ui"
	def home = app + ".home"

	new File(webAppDir.toString() + "/WEB-INF/web.xml").text = file(ext.templateBasePath + 'web.xml').text.replaceAll("@module@", rootProject.name).replaceAll("@package@", base);
	new File(webAppDir.toString() + "/index.html").text = file(ext.templateBasePath + 'index.html').text.replaceAll("@module@", rootProject.name)
	new File(webAppDir.toString() + "/" + rootProject.name + ".css").text = "/* put your CSS styling here */"
	new File(webAppDir.toString() + "/sticky-footer-navbar.css").text = file(ext.templateBasePath + 'sticky-footer-navbar.css').text

	// build classname for entryPoint
	char[] rootProjectArray = rootProject.name.toCharArray();
	rootProjectArray[0] = Character.toUpperCase(rootProjectArray[0]);
	char[] projectArray = project.name.toCharArray();
	projectArray[0] = Character.toUpperCase(projectArray[0]);
	def entryPointClassName =  new String(rootProjectArray) + new String(projectArray);
	
	sourceSets.main*.java.srcDirs*.each {

		// Module file (*.gwt.xml) ############################################
		new File(it.toString() + "/" + base.replaceAll("\\.", "/")).mkdirs()
		new File(it.toString() + "/" + base.replaceAll("\\.", "/") + "/" + rootProject.name + ".gwt.xml").text = file(ext.templateBasePath + "/module.gwt.xml").text.replaceAll("@module@", rootProject.name).replaceAll("@base@", base)

		// .client ############################################################
		new File(it.toString() + "/" + client.replaceAll("\\.", "/")).mkdirs()

		// .gin ###############################################################
		new File(it.toString() + "/" + gin.replaceAll("\\.", "/")).mkdirs()
		new File(it.toString() + "/" + gin.replaceAll("\\.", "/") + "/ClientModule.java").text = file(ext.templateBasePath + "/client/gin/ClientModule.java").text.replaceAll("@package@", gin).replaceAll("@base@", base)

		// .place #############################################################
		new File(it.toString() + "/" + place.replaceAll("\\.", "/")).mkdirs()
		new File(it.toString() + "/" + place.replaceAll("\\.", "/") + "/NameTokens.java").text = file(ext.templateBasePath + "/client/place/NameTokens.java").text.replaceAll("@package@", place)

		// .application #######################################################
		new File(it.toString() + "/" + app.replaceAll("\\.", "/")).mkdirs()
		new File(it.toString() + "/" + app.replaceAll("\\.", "/") + "/ApplicationModule.java").text = file(ext.templateBasePath + "/client/application/ApplicationModule.java").text.replaceAll("@package@", app).replaceAll("@base@", base)
		new File(it.toString() + "/" + app.replaceAll("\\.", "/") + "/ApplicationPresenter.java").text = file(ext.templateBasePath + "/client/application/ApplicationPresenter.java").text.replaceAll("@package@", app)
		new File(it.toString() + "/" + app.replaceAll("\\.", "/") + "/ApplicationView.java").text = file(ext.templateBasePath + "/client/application/ApplicationView.java").text.replaceAll("@package@", app)
		new File(it.toString() + "/" + app.replaceAll("\\.", "/") + "/ApplicationView.ui.xml").text = file(ext.templateBasePath + "/client/application/ApplicationView.ui.xml").text.replaceAll("@base@", base)

		// .application.ui ####################################################
		new File(it.toString() + "/" + ui.replaceAll("\\.", "/")).mkdirs()
		new File(it.toString() + "/" + ui.replaceAll("\\.", "/") + "/Header.java").text = file(ext.templateBasePath + "/client/application/ui/Header.java").text.replaceAll("@package@", ui).replaceAll("@base@", base)
		new File(it.toString() + "/" + ui.replaceAll("\\.", "/") + "/Header.ui.xml").text = file(ext.templateBasePath + "/client/application/ui/Header.ui.xml").text.replaceAll("@base@", base).replaceAll("@module@", rootProject.name)
		new File(it.toString() + "/" + ui.replaceAll("\\.", "/") + "/Footer.java").text = file(ext.templateBasePath + "/client/application/ui/Footer.java").text.replaceAll("@package@", ui).replaceAll("@base@", base)
		new File(it.toString() + "/" + ui.replaceAll("\\.", "/") + "/Footer.ui.xml").text = file(ext.templateBasePath + "/client/application/ui/Footer.ui.xml").text.replaceAll("@base@", base)

		// .application.home ##################################################
		new File(it.toString() + "/" + home.replaceAll("\\.", "/")).mkdirs()
		new File(it.toString() + "/" + home.replaceAll("\\.", "/") + "/HomeModule.java").text = file(ext.templateBasePath + "/client/application/home/HomeModule.java").text.replaceAll("@package@", home)
		new File(it.toString() + "/" + home.replaceAll("\\.", "/") + "/HomePresenter.java").text = file(ext.templateBasePath + "/client/application/home/HomePresenter.java").text.replaceAll("@package@", home).replaceAll("@base@", base)
		new File(it.toString() + "/" + home.replaceAll("\\.", "/") + "/HomeView.java").text = file(ext.templateBasePath + "/client/application/home/HomeView.java").text.replaceAll("@package@", home).replaceAll("@base@", base)
		new File(it.toString() + "/" + home.replaceAll("\\.", "/") + "/HomeView.ui.xml").text = file(ext.templateBasePath + "/client/application/home/HomeView.ui.xml").text.replaceAll("@base@", base)
}

}