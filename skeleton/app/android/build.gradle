// ############################################################################
// Android Base Configuration
// ############################################################################
apply from: "$rootDir/gradle/android/android.gradle"

// ############################################################################
// Configurations & Buildscript
// ############################################################################
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
    }
}

configurations {
	apt
}

// ############################################################################
// Continous Integration
// ############################################################################
apply from: "$rootDir/gradle/jenkins.gradle"


// ############################################################################
// Eclipse Project Nature for generated sources
// ############################################################################
eclipse {
	jdt {
		sourceCompatibility = 1.7
		targetCompatibility = 1.7
	}
	
	classpath {
		containers 'com.android.ide.eclipse.adt.ANDROID_FRAMEWORK', 'com.android.ide.eclipse.adt.LIBRARIES', 'com.android.ide.eclipse.adt.DEPENDENCIES'
		plusConfigurations += configurations.compile
		file {			
			whenMerged { classpath ->
				def containers = classpath.entries.findAll {
				  entry -> entry.path == 'org.eclipse.jdt.launching.JRE_CONTAINER' ||  entry.path == 'bin' || entry.kind == 'src' || entry.kind == 'output'}
			  classpath.entries.removeAll (containers)
			}
			withXml {
				def node = it.asNode()
				node.appendNode('classpathentry', [kind: 'src', path: 'src-gen', output: 'bin/classes'])
				node.appendNode('classpathentry', [kind: 'src', path: 'src/main/java', output: 'bin/classes'])
				node.appendNode('classpathentry', [kind: 'src', path: 'src/test/java', output: 'bin/classes'])
				node.appendNode('classpathentry', [kind: 'src', path: 'gen'])
				node.appendNode('classpathentry', [kind: 'output', path: 'bin/classes'])
				node.appendNode('classpathentry', [kind: 'src', path: '/mobile-reporting'])
			}
		}
	}
	
	project {
		natures 'com.android.ide.eclipse.adt.AndroidNature','org.eclipse.jdt.core.javanature'
		natures 'org.sonar.ide.eclipse.core.sonarNature'
		buildCommand 'com.android.ide.eclipse.adt.ResourceManagerBuilder'
		buildCommand 'com.android.ide.eclipse.adt.PreCompilerBuilder'
		buildCommand 'com.android.ide.eclipse.adt.ApkBuilder'
		buildCommand 'org.eclipse.jdt.core.javabuilder'
	}
}